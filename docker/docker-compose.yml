version: '4.0'
services:
  postgres:
    image: postgres
    networks:
      - internal
    environment:
      POSTGRES_PASSWORD: "qwerty"


  gateway:
    build:
      context: ../
      dockerfile: docker/Dockerfile.gateway
    image: gateway_image
    container_name: gateway_container
    networks:
      - internal
    env_file:
      - ../.env
    expose:
      - "8000"
    ports:
      - "8000:8000"
    command: bash -c "poetry run uvicorn apps.api:app --host 0.0.0.0 --port 8000"
    depends_on:
      - postgres

  observer:
    build:
      context: ../
      dockerfile: docker/Dockerfile.observer
    image: observer_image
    container_name: observer_container
    networks:
      - internal
    env_file:
      - ../.env
    command:
      - bash -c "poetry run alembic upgrade head"
      - bash -c "poetry run python apps/observer_app.py"
    depends_on:
      - gateway

  auth:
    build:
      context: ../
      dockerfile: docker/Dockerfile.auth
    networks:
      - internal
    env_file:
      - ../.env
    command: bash -c "poetry run python apps/auth_app.py"
    depends_on:
      - gateway

  planner:
    build:
      context: ../
      dockerfile: docker/Dockerfile.planner
    networks:
      - internal
    env_file:
      - ../.env
    command: bash -c "poetry run python apps/planner_app.py"
    depends_on:
      - gateway

  kafka:
    image: bitnami/kafka:latest
    networks:
      - internal
    expose:
      - "9094"
      - "9093"
    ports:
      - "9094:9094"
      - "9093:9093"
    volumes:
      - ../kafka_data:/bitnami
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@<your_host>:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    depends_on:
      - zookeeper

  stats:
    build:
      context: ../
      dockerfile: docker/Dockerfile.stats
    networks:
      - internal
    env_file:
      - ../.env
    command: bash -c "poetry run python apps/stats.py"
    depends_on:
      - kafka

networks:
  internal:
    driver: bridge